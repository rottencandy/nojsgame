@use "sass:math";
@import "person";
@import "background";
/**
* Vars
*/
$floorCheckerSize: 50px;
$floorWidth: 15em;
$floorDist: 250em;
$floorLoopStartDist: -210em;
$floorLoopEndDist: 0em;
$floorMoveDuration: 40s;

$roadPath: "M 100 0 h 300 V 1300 c 0 500 150 500 150 1000 v 1000 c 0 500 -150 500 -150 1000 v 1000 c 0 500 150 500 150 1000 v 1000 c 0 500 150 500 150 1000 v 1000 c 0 1000 -300 1000 -300 2000 v 1300 h -300 v -1300 c 0 -1000 300 -1000 300 -2000 v -1000 c 0 -500 -150 -500 -150 -1000 v -1000 c 0 -500 -150 -500 -150 -1000 v -1000 c 0 -500 150 -500 150 -1000 v -1000 c 0 -500 -100 -500 -150 -1000 z";
$fadeColor: #23110c;
$roadColor: #725055;

@font-face {
    font-family: "PixelOperatorRegular";
    src: url("assets/PixelOperatorRegular.ttf") format("truetype");
    font-weight: normal;
    font-style: normal;
}

html,
body {
    margin: 0;
    height: 100%;
    font-family: "PixelOperatorRegular";
    font-weight: normal;
    font-size: 50px;
    font-style: normal;
    overflow: hidden;
}

.root {
    position: relative;
    min-height: 100%;

    // hide all inputs and use labels to toggle
    > input {
        display: none;
    }
}

/**
* Main Menu
*/
.menu {
    $menuSize: 15em;

    position: absolute;
    z-index: 999;
    top: 15%;
    left: calc(50% - $menuSize / 2);

    width: $menuSize;
    height: calc($menuSize / 2);

    padding: 1em;
    text-align: center;

    > .start {
        background: red;
        cursor: pointer;
        color: #ddd;
        padding: 10px;
        border-radius: 10px;
        cursor: pointer;

        & > span {
            display: inline-block;
            &:hover {
                animation: shake 0.1s infinite alternate;
            }
        }
    }


    // hide menu on start click
    #start:checked ~ & {
        animation: 1s ease-in 0s 1 normal both running exitup;
    }

    & .text {
        color: #ddd;
        font-size: 40px;
    }
    // title
    & h1 {
        color: red;
    }
}

.scene {
    opacity: 0;
    display: none;
    top: 0;
    position: absolute;
    width: 100%;
    height: 100%;

    #start:checked ~ .cell-wrapper > .cell-grid > & {
        // fade in on start
        animation: 1s linear 0.2s 1 normal both running fadein;
        display: block;
    }

    & > .perspective-wrapper {
        height: 100vh;
        transition: 0.5s;
        perspective: 10em;
        perspective-origin: 50% 45%;
        transform-style: preserve-3d;
    }
}

.angled-backdrop {
    position: absolute;
    width: 400%;
    height: 100%;
    transform-origin: top left;
    z-index: 1;
    transform: translateZ(-20em) translateY(-45%) translateX(-40%);
    & > .mountain {
        background-size: 35%;
    }
}

.angled-platform {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-origin: top left;
    background: transparent;
    transform: translateZ(-20em) translateY(50%) rotateX(90deg);
    transform-style: preserve-3d;
}

.looping-floor {
    position: absolute;
    width: $floorWidth;
    height: $floorDist;
    left: calc(50% - $floorWidth / 2);
    transform-style: preserve-3d;

    background: #23110c;

    animation: $floorMoveDuration linear 0s infinite normal both running
        floorLoopZ;

    > .road-path {
        position: absolute;
        width: 100%;
        height: 100%;
        clip-path: path($roadPath);
        background: $roadColor;
    }

    > .obstacle {
        position: absolute;
        width: 1em;
        height: 1em;
        background: brown;
        offset-path: path($roadPath);
        offset-rotate: 0deg;

        @for $i from 0 to 100 {
            $max: 6; $min: 3;
            &-#{$i} {
                offset-distance: math.percentage(
                    calc(($i + math.random()) / 100)
                );
                animation: 1 + math.random() + s obstacle-move-#{$i} linear 0s alternate infinite running;
            }
            @keyframes obstacle-move-#{$i} {
                from {
                    transform: translateX(0%)
                        translateZ(0.5em) rotateX(90deg);
                }

                to {
                    transform: translateX(100%)
                        translateZ(0.5em) rotateX(90deg);
                }
            }
        }
    }
}

.dist-fade-overlay {
    position: absolute;
    background: linear-gradient($fadeColor, #0000);
    width: $floorWidth;
    height: 80%;
    left: calc(50% - $floorWidth / 2);
}

/**
* Grid Cells
*/
.cell {
    &-wrapper {
        position: absolute;
    }

    &-grid {
        width: 100vw;
        height: 100vh;
        background-color: transparent;
        display: grid;
        grid-template: repeat(1, 1fr) / repeat(100, 1fr);
    }

    width: 100%;
    height: 100%;
    z-index: 5;
}

/**
* Hover input processing
*/

@for $i from 0 to 100 {
    // move person in x - axis
    .cell:nth-child(#{$i + 1}):hover ~ .scene > .person {
        @if $i <= 5 {
            left: 0;
        } @else if $i >= 95 {
            left: 90%;
        } @else {
            left: calc(($i * 1%) - 5%);
        }
    }

    // change perspective cam in x - axis
    .cell:nth-child(#{$i + 1}):hover ~ .scene > .perspective-wrapper {
        @if $i <= 10 {
            perspective-origin: 37% 45%;
        } @else if $i <= 20 {
            perspective-origin: 40% 45%;
        } @else if $i <= 30 {
            perspective-origin: 43% 45%;
        } @else if $i <= 40 {
            perspective-origin: 45% 45%;
        } @else if $i <= 50 {
            perspective-origin: 47% 45%;
        } @else if $i <= 60 {
            perspective-origin: 50% 45%;
        } @else if $i <= 70 {
            perspective-origin: 53% 45%;
        } @else if $i <= 80 {
            perspective-origin: 55% 45%;
        } @else if $i <= 90 {
            perspective-origin: 57% 45%;
        } @else {
            perspective-origin: 60% 45%;
        }
    }
}

.person {
    position: absolute;
    width: 9%;
    height: 15vh;
    bottom: 20vh;
    z-index: 4;
}

/**
* Keyframes
*/
@keyframes exitup {
    to {
        top: -100%;
    }
}

@keyframes shake {
    0%  {
        transform: translateX(2px) translateY(-2px);
    }
    25% {
        transform: translateX(-2px) translateY(2px);
    }
    50% {
        transform: translateX(2px) translateY(-2px);
    }
    75% {
        transform: translateX(-2px) translateY(2px);
    }
}

@keyframes fadein {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes floorLoopZ {
    from {
        transform: translateY($floorLoopStartDist);
    }
    to {
        transform: translateY($floorLoopEndDist);
    }
}
